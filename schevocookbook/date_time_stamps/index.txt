=================
 Schevo Cookbook
=================

--------------------------------------------
 Recording entity create/update time stamps
--------------------------------------------


Recording creation time stamps
==============================

Code: `<schema/date_time_stamps_001.py>`__ 
`(colorized) <schema/date_time_stamps_001.py-colorized>`__ 

To record a time stamp for creation time of an entity, do the following:

1. Add a ``created`` field of type ``datetime`` to the entity
   class. Make it ``readonly=True`` and perhaps ``hidden=True`` so
   user interfaces don't show it as editable. (Line 12)

2. Customize the ``Create`` transaction's ``_before_execute``
   method. See `Schevo transaction method hooks
   </schevo/reference/transaction-hook-methods.txt>`__.  (Lines 14-18)

3. Set ``readonly=False`` on the ``created`` field so we can record
   the timestamp. (Line 17)

4. Record the timestamp by importing ``datetime`` and using
   ``datetime.datetime.now()``.  (Lines 5-6, 18)

Create a new `Thing`, and check to see that its date/time stamp is
between a before and after timestamp:

.. sourcecode:: pycon

    >>> from schevo.test import DocTestEvolve
    >>> import datetime; now = datetime.datetime.now

    >>> before = now()
    >>> t = DocTestEvolve('schevocookbook.date_time_stamps.schema', 1)
    >>> thing = t.db.execute(
    ...     t.db.Thing.t.create(name=u'Thing One')
    ...     )
    >>> after = now()
    >>> before < thing.created < after
    True


Recording update time stamps
============================

Code: `<schema/date_time_stamps_002.py>`__ 
`(colorized) <schema/date_time_stamps_002.py-colorized>`__ 

The steps are similar for recording a last-updated time stamp:

1. Add an ``updated`` field of type ``datetime`` to the entity
   class. Make it ``readonly=True`` and perhaps ``hidden=True``. Also
   make it ``required=False``, as newly-created entities won't yet
   have an updated time stamp. (Line 13)

2. Customize the ``Update`` transaction's ``_before_execute``
   method. See `Schevo transaction method hooks
   </schevo/reference/transaction-hook-methods.txt>`__.  (Lines 21-25)

3. Set ``readonly=False`` on the ``updated`` field so we can record
   the timestamp. (Line 24)

4. Record the timestamp by using ``datetime.datetime.now()``. (Line
   25)

Create a new `Thing`, and check to see that its create and update
date/time stamps line up with timestamps recorded and after those
operations:

.. sourcecode:: pycon

    >>> before = now()
    >>> t = DocTestEvolve('schevocookbook.date_time_stamps.schema', 2)
    >>> thing = t.db.execute(t.db.Thing.t.create(
    ...     name=u'Thing One',
    ...     ))
    >>> during = now()
    >>> thing = t.db.execute(thing.t.update(
    ...     name=u'Thing 1',
    ...     ))
    >>> after = now()
    >>> before < thing.created < during < thing.updated < after
    True
